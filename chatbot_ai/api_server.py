from flask import Flask, request, jsonify
from flask_cors import CORS
from semantic_chatbot import (
    SentenceTransformer, ensure_index, load_nganh_data, find_best_nganh, answer, generate_answer_with_llm, TOP_K
)
import numpy as np

app = Flask(__name__)
CORS(app)

# Kh·ªüi t·∫°o model v√† d·ªØ li·ªáu 1 l·∫ßn khi server start
model = SentenceTransformer("all-MiniLM-L6-v2")
nganhs = load_nganh_data()
embeddings, index, ids = ensure_index(model, nganhs)
history = []

@app.route('/api/chatbot/ask', methods=['POST'])
def ask():
    data = request.get_json()
    question = data.get('question', '').strip() if data else ''
    if not question:
        return jsonify({'answer': 'Vui l√≤ng nh·∫≠p c√¢u h·ªèi!'}), 400
    q_lower = question.lower().strip()
    if q_lower == 'reset':
        history.clear()
        return jsonify({'answer': 'üîÑ ƒê√£ x√≥a l·ªãch s·ª≠ chat!', 'reset': True})
    if q_lower == 'help':
        return jsonify({'answer': 'H·ªéI: ƒëi·ªÉm chu·∫©n, ch·ªâ ti√™u, khoa, m√¥ t·∫£ c√°c ng√†nh. L·ªánh: reset, help, exit.'})
    # Tr·∫£ l·ªùi t·ª´ d·ªØ li·ªáu n·∫øu t√¨m ƒë∆∞·ª£c ng√†nh ph√π h·ª£p
    ng, score = find_best_nganh(question, model, index, nganhs, ids, top_k=1, min_score=0.5)
    if ng:
        ans = answer(question, ng, score)
        history.append({"question": question, "answer": ans})
        return jsonify({'answer': ans})
    # N·∫øu kh√¥ng t√¨m ƒë∆∞·ª£c ng√†nh ph√π h·ª£p, fallback sang LLM v·ªõi top-k ng√†nh g·∫ßn nh·∫•t
    q_emb = model.encode([question], normalize_embeddings=True)
    q_emb = np.array(q_emb).astype('float32')
    if q_emb.ndim == 1:
        q_emb = np.expand_dims(q_emb, 0)
    D, I = index.search(q_emb, TOP_K)
    top_nganhs = [nganhs[ids[int(i)]] for i in I[0]]
    if not top_nganhs or D[0][0] < 0.5:
        return jsonify({'answer': 'Xin l·ªói, t√¥i ch∆∞a hi·ªÉu r√µ c√¢u h·ªèi c·ªßa b·∫°n. B·∫°n vui l√≤ng nh·∫≠p r√µ h∆°n t√™n ng√†nh, m√£ ng√†nh ho·∫∑c m√¥ t·∫£ chi ti·∫øt h∆°n?'})
    llm_answer = generate_answer_with_llm(question, top_nganhs, history)
    history.append({"question": question, "answer": llm_answer})
    return jsonify({'answer': llm_answer})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5005, debug=True) 